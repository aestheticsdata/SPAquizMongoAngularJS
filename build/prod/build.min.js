function LoginController(e,o,r,n){e.login=function(){var t=document.querySelector("#userfield").value,s=document.querySelector("#passfield").value;console.log("submit form"),r.login(t,s).success(function(e){console.log(e),n.setQuestions(e),o.go("quiz",{idx:0})}).error(function(o){console.log(o),e.loginerror=!0})},e.onFocus=function(o){e.loginerror=!1,o.target.value=""},e.loginerror=!1}function QuestionsController(e,o,r,n){var t=r.idx,s=n.getQuestions().length;e.isPrevDisabled=0===parseInt(t),e.isNextDisabled=!1,e.questions=n.getQuestions(t),e.currentQuestionIdx=parseInt(t,10)+1,e.totalQuestionIdx=s,e.checkedQuestion=function(){return-1===n.currentAnswers[t]?0:n.currentAnswers[t]},e.onRadioChanged=function(e){n.currentAnswers[t]=e,console.log("radio has changed : ",e)},e.prev=function(){o.go("quiz",{idx:0===t?t:parseInt(t-1)})},e.next=function(){parseInt(t)===s-1?o.go("score"):o.go("quiz",{idx:parseInt(t)+1})}}function ScoreController(e,o){e.score=o.getScore()}function LoginService(e,o){function r(r,n){return o.debug?e.get("../mock_data/questions.json"):e.post(o.loginUrl,{username:r,password:n})}var n={login:r};return n}function QuestionsService(){function e(e){console.log("QuestionsService::setQuestions : ",e),t.questions=e;for(var o=0;o<t.questions.length;o++)t.currentAnswers.push(-1);return!0}function o(e){return e?t.questions[e]:t.questions}function r(e){return t.score=e,!0}function n(){for(var e=0;e<t.questions.length;e++)-1===t.currentAnswers[e]&&(t.currentAnswers[e]=0),console.log("qs.currentAnswers",t.currentAnswers),t.questions[e].correctAnswer===t.currentAnswers[e]&&t.score++;return t.score}var t={questions:[],currentAnswers:[],score:0,setScore:r,getScore:n,setQuestions:e,getQuestions:o};return t}angular.module("SPAquiz.controllers",[]),angular.module("SPAquiz.services",[]),angular.module("SPAquiz.controllers").controller("LoginController",LoginController),LoginController.$inject=["$scope","$state","LoginService","QuestionsService"],angular.module("SPAquiz.controllers").controller("QuestionsController",QuestionsController),QuestionsController.$inject=["$scope","$state","$stateParams","QuestionsService"],angular.module("SPAquiz.controllers").controller("ScoreController",ScoreController),ScoreController.$inject=["$scope","QuestionsService"],angular.module("SPAquiz.services").constant("CONFIG",{loginUrl:"http://www.hexafarm.com:8990/login",debug:!1}),angular.module("SPAquiz.services").factory("LoginService",LoginService),LoginService.$inject=["$http","CONFIG"],angular.module("SPAquiz.services").factory("QuestionsService",QuestionsService),angular.module("SPAquiz",["SPAquiz.controllers","SPAquiz.services","ui.router"]).config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("login",{url:"/login",templateUrl:"partials/login.html",controller:"LoginController"}).state("quiz",{url:"/questions/:idx",templateUrl:"partials/questions.html",controller:"QuestionsController"}).state("score",{url:"/score",templateUrl:"partials/score.html",controller:"ScoreController"}).state("404",{url:"/404",templateUrl:"partials/404.html"}),o.otherwise("/login")}]).run(["$state",function(e){e.go("login")}]);